{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introdu\u00e7\u00e3o Esta \u00e9 a documenta\u00e7\u00e3o de um projeto realizado na disciplina de Administra\u00e7\u00e3o de Sistemas Abertos do Curso de Redes de Computadores.","title":"Home"},{"location":"#introducao","text":"Esta \u00e9 a documenta\u00e7\u00e3o de um projeto realizado na disciplina de Administra\u00e7\u00e3o de Sistemas Abertos do Curso de Redes de Computadores.","title":"Introdu\u00e7\u00e3o"},{"location":"comandos/","text":"Comandos essenciais Para listar as interfaces de rede: $ ip -br - c a Para ativar e desativar (no Debian): $ ifup INTERFACE #ATIVAR $ ifdown INTERFACE #DESATIVAR","title":"Comandos"},{"location":"comandos/#comandos-essenciais","text":"","title":"Comandos essenciais"},{"location":"comandos/#para-listar-as-interfaces-de-rede","text":"$ ip -br - c a","title":"Para listar as interfaces de rede:"},{"location":"comandos/#para-ativar-e-desativar-no-debian","text":"$ ifup INTERFACE #ATIVAR $ ifdown INTERFACE #DESATIVAR","title":"Para ativar e desativar (no Debian):"},{"location":"configurar_interfaces/","text":"Configura\u00e7\u00e3o das Interfaces de Rede com Netplan no Ubuntu Server O Netplan \u00e9 o utilit\u00e1rio de configura\u00e7\u00e3o de rede padr\u00e3o no Ubuntu a partir da vers\u00e3o 17.10. Ele substitui o arquivo de configura\u00e7\u00e3o de rede legado \"/etc/network/interfaces\" e permite configurar a rede de forma mais eficiente e flex\u00edvel. O Netplan utiliza a sintaxe YAML para definir a configura\u00e7\u00e3o de rede. Passo 1: Criar/Editar o arquivo de configura\u00e7\u00e3o Acesse o arquivo de configura\u00e7\u00e3o YAML no diret\u00f3rio \"/etc/netplan\". $vi /etc/netplan/50-cloud-init.yaml Dentro do arquivo, voc\u00ea encontrar\u00e1 o seguinte conte\u00fado: network: version: 2 ethernets: eth0: dhcp4: true Pressione a tecla i para iniciar a edi\u00e7\u00e3o do arquivo. Atualize o arquivo de configura\u00e7\u00e3o com as seguintes informa\u00e7\u00f5es, verificando sempre a identa\u00e7\u00e3o correta: network: version: 2 renderer: networkd ethernets: eth0: # interface de rede addresses: - 192.168.0.210/24 # seu endere\u00e7o de IP est\u00e1tico/m\u00e1scara nameservers: addresses: [8.8.8.8, 8.8.4.4] # DNS routes: - to: default via: 192.168.0.254 # Gateway Aperte a tecla Esc e digite :wq! para salvar e sair do editor. Passo 2: Aplique as novas configura\u00e7\u00f5es de rede Use o seguinte comando para aplicar as novas configura\u00e7\u00f5es de rede: $ netplan apply Se tudo estiver correto, o comando ser\u00e1 executado sem retornar nada. Caso ocorra algum erro, o Netplan exibir\u00e1 uma mensagem de erro indicando o problema. Passo 3: Verifique se o endere\u00e7o IP foi atribu\u00eddo corretamente usando o comando: $ ip -br -c a Passo 4: Teste a conex\u00e3o com a Internet Teste a conex\u00e3o com a Internet usando o comando ping, por exemplo: $ ping google.com Certifique-se de que a conex\u00e3o com a Internet esteja funcionando corretamente. Passo 5: Instala\u00e7\u00e3o dos Pacotes Necess\u00e1rios Para prosseguir com a instala\u00e7\u00e3o dos pacotes necess\u00e1rios, siga as etapas abaixo: Atualize os reposit\u00f3rios do sistema: $ sudo apt update Atualize os pacotes instalados para as vers\u00f5es mais recentes, se necess\u00e1rio: $ sudo apt upgrade Instale os pacotes necess\u00e1rios, incluindo sudo, nano, micro, apache2, syslog-ng, mariadb-server e php: $ sudo apt install sudo nano micro apache2 syslog-ng mariadb-server php -y O par\u00e2metro -y \u00e9 usado para confirmar automaticamente as instala\u00e7\u00f5es sem solicitar confirma\u00e7\u00e3o manual. Configura\u00e7\u00e3o das Interfaces de Rede no Debian A configura\u00e7\u00e3o das interfaces de rede no Debian \u00e9 feita por meio do arquivo de configura\u00e7\u00e3o /etc/network/interfaces. Neste arquivo, voc\u00ea pode definir as configura\u00e7\u00f5es de rede para cada interface de rede do sistema. Passo 1: Acessar o arquivo de configura\u00e7\u00e3o Abra um terminal e acesse o arquivo de configura\u00e7\u00e3o /etc/network/interfaces usando um editor de texto, como o nano: $ nano /etc/network/interfaces Passo 2: Configurar as interfaces de rede Dentro do arquivo /etc/network/interfaces, voc\u00ea pode definir as configura\u00e7\u00f5es para cada interface de rede separadamente. Aqui est\u00e1 um exemplo de como configurar uma interface de rede usando DHCP: auto eth0 iface eth0 inet dhcp Nesse exemplo, a interface de rede eth0 est\u00e1 configurada para obter um endere\u00e7o IP automaticamente por meio do DHCP. Se voc\u00ea deseja configurar um endere\u00e7o IP est\u00e1tico para a interface de rede, pode usar o seguinte exemplo: auto eth0 iface eth0 inet static address 192.168.0.100 netmask 255.255.255.0 gateway 192.168.0.1 Nesse exemplo, a interface de rede eth0 est\u00e1 configurada com um endere\u00e7o IP est\u00e1tico 192.168.0.100, uma m\u00e1scara de rede 255.255.255.0 e um gateway padr\u00e3o 192.168.0.1. Voc\u00ea tamb\u00e9m pode adicionar configura\u00e7\u00f5es adicionais, como servidores DNS: auto eth0 iface eth0 inet static address 192.168.0.100 netmask 255.255.255.0 gateway 192.168.0.1 dns-nameservers 8.8.8.8 8.8.4.4 Nesse exemplo, os servidores DNS do Google 8.8.8.8 e 8.8.4.4 s\u00e3o configurados para a interface de rede eth0. Passo 3: Salvar e fechar o arquivo Depois de fazer as altera\u00e7\u00f5es necess\u00e1rias no arquivo /etc/network/interfaces, salve o arquivo e feche o editor de texto. Passo 4: Reiniciar o servi\u00e7o de rede Para que as altera\u00e7\u00f5es tenham efeito, voc\u00ea precisa reiniciar o servi\u00e7o de rede. Use o seguinte comando para reiniciar o servi\u00e7o networking: $ systemctl restart networking","title":"Configurar interfaces"},{"location":"configurar_interfaces/#configuracao-das-interfaces-de-rede-com-netplan-no-ubuntu-server","text":"O Netplan \u00e9 o utilit\u00e1rio de configura\u00e7\u00e3o de rede padr\u00e3o no Ubuntu a partir da vers\u00e3o 17.10. Ele substitui o arquivo de configura\u00e7\u00e3o de rede legado \"/etc/network/interfaces\" e permite configurar a rede de forma mais eficiente e flex\u00edvel. O Netplan utiliza a sintaxe YAML para definir a configura\u00e7\u00e3o de rede.","title":"Configura\u00e7\u00e3o das Interfaces de Rede com Netplan no Ubuntu Server"},{"location":"configurar_interfaces/#passo-1-criareditar-o-arquivo-de-configuracao","text":"Acesse o arquivo de configura\u00e7\u00e3o YAML no diret\u00f3rio \"/etc/netplan\". $vi /etc/netplan/50-cloud-init.yaml Dentro do arquivo, voc\u00ea encontrar\u00e1 o seguinte conte\u00fado: network: version: 2 ethernets: eth0: dhcp4: true Pressione a tecla i para iniciar a edi\u00e7\u00e3o do arquivo. Atualize o arquivo de configura\u00e7\u00e3o com as seguintes informa\u00e7\u00f5es, verificando sempre a identa\u00e7\u00e3o correta: network: version: 2 renderer: networkd ethernets: eth0: # interface de rede addresses: - 192.168.0.210/24 # seu endere\u00e7o de IP est\u00e1tico/m\u00e1scara nameservers: addresses: [8.8.8.8, 8.8.4.4] # DNS routes: - to: default via: 192.168.0.254 # Gateway Aperte a tecla Esc e digite :wq! para salvar e sair do editor.","title":"Passo 1: Criar/Editar o arquivo de configura\u00e7\u00e3o"},{"location":"configurar_interfaces/#passo-2-aplique-as-novas-configuracoes-de-rede","text":"Use o seguinte comando para aplicar as novas configura\u00e7\u00f5es de rede: $ netplan apply Se tudo estiver correto, o comando ser\u00e1 executado sem retornar nada. Caso ocorra algum erro, o Netplan exibir\u00e1 uma mensagem de erro indicando o problema.","title":"Passo 2: Aplique as novas configura\u00e7\u00f5es de rede"},{"location":"configurar_interfaces/#passo-3-verifique-se-o-endereco-ip-foi-atribuido-corretamente-usando-o-comando","text":"$ ip -br -c a","title":"Passo 3: Verifique se o endere\u00e7o IP foi atribu\u00eddo corretamente usando o comando:"},{"location":"configurar_interfaces/#passo-4-teste-a-conexao-com-a-internet","text":"Teste a conex\u00e3o com a Internet usando o comando ping, por exemplo: $ ping google.com Certifique-se de que a conex\u00e3o com a Internet esteja funcionando corretamente.","title":"Passo 4: Teste a conex\u00e3o com a Internet"},{"location":"configurar_interfaces/#passo-5-instalacao-dos-pacotes-necessarios","text":"Para prosseguir com a instala\u00e7\u00e3o dos pacotes necess\u00e1rios, siga as etapas abaixo: Atualize os reposit\u00f3rios do sistema: $ sudo apt update Atualize os pacotes instalados para as vers\u00f5es mais recentes, se necess\u00e1rio: $ sudo apt upgrade Instale os pacotes necess\u00e1rios, incluindo sudo, nano, micro, apache2, syslog-ng, mariadb-server e php: $ sudo apt install sudo nano micro apache2 syslog-ng mariadb-server php -y O par\u00e2metro -y \u00e9 usado para confirmar automaticamente as instala\u00e7\u00f5es sem solicitar confirma\u00e7\u00e3o manual.","title":"Passo 5: Instala\u00e7\u00e3o dos Pacotes Necess\u00e1rios"},{"location":"configurar_interfaces/#configuracao-das-interfaces-de-rede-no-debian","text":"A configura\u00e7\u00e3o das interfaces de rede no Debian \u00e9 feita por meio do arquivo de configura\u00e7\u00e3o /etc/network/interfaces. Neste arquivo, voc\u00ea pode definir as configura\u00e7\u00f5es de rede para cada interface de rede do sistema.","title":"Configura\u00e7\u00e3o das Interfaces de Rede no Debian"},{"location":"configurar_interfaces/#passo-1-acessar-o-arquivo-de-configuracao","text":"Abra um terminal e acesse o arquivo de configura\u00e7\u00e3o /etc/network/interfaces usando um editor de texto, como o nano: $ nano /etc/network/interfaces","title":"Passo 1: Acessar o arquivo de configura\u00e7\u00e3o"},{"location":"configurar_interfaces/#passo-2-configurar-as-interfaces-de-rede","text":"Dentro do arquivo /etc/network/interfaces, voc\u00ea pode definir as configura\u00e7\u00f5es para cada interface de rede separadamente. Aqui est\u00e1 um exemplo de como configurar uma interface de rede usando DHCP: auto eth0 iface eth0 inet dhcp Nesse exemplo, a interface de rede eth0 est\u00e1 configurada para obter um endere\u00e7o IP automaticamente por meio do DHCP. Se voc\u00ea deseja configurar um endere\u00e7o IP est\u00e1tico para a interface de rede, pode usar o seguinte exemplo: auto eth0 iface eth0 inet static address 192.168.0.100 netmask 255.255.255.0 gateway 192.168.0.1 Nesse exemplo, a interface de rede eth0 est\u00e1 configurada com um endere\u00e7o IP est\u00e1tico 192.168.0.100, uma m\u00e1scara de rede 255.255.255.0 e um gateway padr\u00e3o 192.168.0.1. Voc\u00ea tamb\u00e9m pode adicionar configura\u00e7\u00f5es adicionais, como servidores DNS: auto eth0 iface eth0 inet static address 192.168.0.100 netmask 255.255.255.0 gateway 192.168.0.1 dns-nameservers 8.8.8.8 8.8.4.4 Nesse exemplo, os servidores DNS do Google 8.8.8.8 e 8.8.4.4 s\u00e3o configurados para a interface de rede eth0.","title":"Passo 2: Configurar as interfaces de rede"},{"location":"configurar_interfaces/#passo-3-salvar-e-fechar-o-arquivo","text":"Depois de fazer as altera\u00e7\u00f5es necess\u00e1rias no arquivo /etc/network/interfaces, salve o arquivo e feche o editor de texto.","title":"Passo 3: Salvar e fechar o arquivo"},{"location":"configurar_interfaces/#passo-4-reiniciar-o-servico-de-rede","text":"Para que as altera\u00e7\u00f5es tenham efeito, voc\u00ea precisa reiniciar o servi\u00e7o de rede. Use o seguinte comando para reiniciar o servi\u00e7o networking: $ systemctl restart networking","title":"Passo 4: Reiniciar o servi\u00e7o de rede"},{"location":"ssh/","text":"Arquivos de Configura\u00e7\u00e3o e Chaves SSH No servidor SSH: /etc/ssh/sshd_config: Este \u00e9 o arquivo de configura\u00e7\u00e3o do servidor SSH. Ele cont\u00e9m v\u00e1rias op\u00e7\u00f5es de configura\u00e7\u00e3o, como portas, autentica\u00e7\u00e3o, permiss\u00f5es de acesso, entre outras. \u00c9 necess\u00e1rio ter privil\u00e9gios de superusu\u00e1rio para editar este arquivo. No cliente SSH: ~/.ssh/config: Este \u00e9 o arquivo de configura\u00e7\u00e3o do cliente SSH, localizado no diret\u00f3rio home do usu\u00e1rio. Ele permite configurar op\u00e7\u00f5es espec\u00edficas para conex\u00f5es SSH, como aliases de host, identidades de chave, op\u00e7\u00f5es de autentica\u00e7\u00e3o, entre outras. Arquivos de chave SSH: id_rsa e id_rsa.pub: Esses s\u00e3o os arquivos da chave privada e p\u00fablica, respectivamente. A chave privada (id_rsa) \u00e9 mantida no cliente e \u00e9 usada para autenticar a conex\u00e3o SSH. A chave p\u00fablica (id_rsa.pub) \u00e9 copiada para o servidor SSH e adicionada ao arquivo authorized_keys para permitir a autentica\u00e7\u00e3o com a chave correspondente. authorized_keys: Este arquivo est\u00e1 localizado no diret\u00f3rio ~/.ssh do usu\u00e1rio no servidor SSH. Ele cont\u00e9m as chaves p\u00fablicas autorizadas para autentica\u00e7\u00e3o com o servidor. Cada chave p\u00fablica autorizada \u00e9 adicionada em uma nova linha neste arquivo. known_hosts: Este arquivo \u00e9 criado automaticamente pelo cliente SSH quando se conecta a um novo servidor SSH. Ele armazena as chaves p\u00fablicas dos servidores aos quais voc\u00ea j\u00e1 se conectou, a fim de verificar a autenticidade desses servidores em conex\u00f5es futuras. Esses arquivos e configura\u00e7\u00f5es s\u00e3o importantes para a configura\u00e7\u00e3o e autentica\u00e7\u00e3o segura de conex\u00f5es SSH. Ao configurar o SSH, \u00e9 essencial garantir que as permiss\u00f5es corretas sejam aplicadas aos arquivos de chave (por exemplo, id_rsa deve ter permiss\u00f5es restritas somente para o usu\u00e1rio) e que as configura\u00e7\u00f5es de seguran\u00e7a apropriadas sejam definidas nos arquivos de configura\u00e7\u00e3o (por exemplo, no sshd_config do servidor).","title":"Ssh"},{"location":"ssh/#arquivos-de-configuracao-e-chaves-ssh","text":"","title":"Arquivos de Configura\u00e7\u00e3o e Chaves SSH"},{"location":"ssh/#no-servidor-ssh","text":"/etc/ssh/sshd_config: Este \u00e9 o arquivo de configura\u00e7\u00e3o do servidor SSH. Ele cont\u00e9m v\u00e1rias op\u00e7\u00f5es de configura\u00e7\u00e3o, como portas, autentica\u00e7\u00e3o, permiss\u00f5es de acesso, entre outras. \u00c9 necess\u00e1rio ter privil\u00e9gios de superusu\u00e1rio para editar este arquivo.","title":"No servidor SSH:"},{"location":"ssh/#no-cliente-ssh","text":"~/.ssh/config: Este \u00e9 o arquivo de configura\u00e7\u00e3o do cliente SSH, localizado no diret\u00f3rio home do usu\u00e1rio. Ele permite configurar op\u00e7\u00f5es espec\u00edficas para conex\u00f5es SSH, como aliases de host, identidades de chave, op\u00e7\u00f5es de autentica\u00e7\u00e3o, entre outras.","title":"No cliente SSH:"},{"location":"ssh/#arquivos-de-chave-ssh","text":"","title":"Arquivos de chave SSH:"},{"location":"ssh/#id_rsa-e-id_rsapub","text":"Esses s\u00e3o os arquivos da chave privada e p\u00fablica, respectivamente. A chave privada (id_rsa) \u00e9 mantida no cliente e \u00e9 usada para autenticar a conex\u00e3o SSH. A chave p\u00fablica (id_rsa.pub) \u00e9 copiada para o servidor SSH e adicionada ao arquivo authorized_keys para permitir a autentica\u00e7\u00e3o com a chave correspondente.","title":"id_rsa e id_rsa.pub:"},{"location":"ssh/#authorized_keys","text":"Este arquivo est\u00e1 localizado no diret\u00f3rio ~/.ssh do usu\u00e1rio no servidor SSH. Ele cont\u00e9m as chaves p\u00fablicas autorizadas para autentica\u00e7\u00e3o com o servidor. Cada chave p\u00fablica autorizada \u00e9 adicionada em uma nova linha neste arquivo.","title":"authorized_keys:"},{"location":"ssh/#known_hosts","text":"Este arquivo \u00e9 criado automaticamente pelo cliente SSH quando se conecta a um novo servidor SSH. Ele armazena as chaves p\u00fablicas dos servidores aos quais voc\u00ea j\u00e1 se conectou, a fim de verificar a autenticidade desses servidores em conex\u00f5es futuras. Esses arquivos e configura\u00e7\u00f5es s\u00e3o importantes para a configura\u00e7\u00e3o e autentica\u00e7\u00e3o segura de conex\u00f5es SSH. Ao configurar o SSH, \u00e9 essencial garantir que as permiss\u00f5es corretas sejam aplicadas aos arquivos de chave (por exemplo, id_rsa deve ter permiss\u00f5es restritas somente para o usu\u00e1rio) e que as configura\u00e7\u00f5es de seguran\u00e7a apropriadas sejam definidas nos arquivos de configura\u00e7\u00e3o (por exemplo, no sshd_config do servidor).","title":"known_hosts:"},{"location":"verlogs/","text":"Visualiza\u00e7\u00e3o de Logs O comando journalctl -f | ccze \u00e9 usado para exibir o log em tempo real do sistema, formatando-o com cores usando o programa ccze. Isso pode ajudar a tornar a leitura do log mais f\u00e1cil e distinguir diferentes tipos de mensagens. Os seguintes comandos podem ser usados para visualizar logs espec\u00edficos com formata\u00e7\u00e3o colorida: Para visualizar o log do sistema: $ tail -f /var/log/syslog | ccze Para visualizar o log de autentica\u00e7\u00e3o: $ tail -f /var/log/auth.log | ccze Para visualizar o log de acesso do Apache: $ tail -f /var/log/apache2/access.log | ccze Para visualizar o log de erros do Apache: $ tail -f /var/log/apache2/error.log | ccze Esses comandos exibir\u00e3o as \u00faltimas linhas do arquivo de log especificado em tempo real, e a sa\u00edda ser\u00e1 formatada com cores usando o ccze. Isso tornar\u00e1 mais f\u00e1cil identificar diferentes tipos de mensagens no log. Lembre-se de que voc\u00ea precisa ter permiss\u00f5es de superusu\u00e1rio (ou usar sudo) para acessar os logs em alguns diret\u00f3rios, como /var/log/auth.log e /var/log/apache2/.","title":"Verlogs"},{"location":"verlogs/#visualizacao-de-logs","text":"O comando journalctl -f | ccze \u00e9 usado para exibir o log em tempo real do sistema, formatando-o com cores usando o programa ccze. Isso pode ajudar a tornar a leitura do log mais f\u00e1cil e distinguir diferentes tipos de mensagens. Os seguintes comandos podem ser usados para visualizar logs espec\u00edficos com formata\u00e7\u00e3o colorida:","title":"Visualiza\u00e7\u00e3o de Logs"},{"location":"verlogs/#para-visualizar-o-log-do-sistema","text":"$ tail -f /var/log/syslog | ccze","title":"Para visualizar o log do sistema:"},{"location":"verlogs/#para-visualizar-o-log-de-autenticacao","text":"$ tail -f /var/log/auth.log | ccze","title":"Para visualizar o log de autentica\u00e7\u00e3o:"},{"location":"verlogs/#para-visualizar-o-log-de-acesso-do-apache","text":"$ tail -f /var/log/apache2/access.log | ccze","title":"Para visualizar o log de acesso do Apache:"},{"location":"verlogs/#para-visualizar-o-log-de-erros-do-apache","text":"$ tail -f /var/log/apache2/error.log | ccze Esses comandos exibir\u00e3o as \u00faltimas linhas do arquivo de log especificado em tempo real, e a sa\u00edda ser\u00e1 formatada com cores usando o ccze. Isso tornar\u00e1 mais f\u00e1cil identificar diferentes tipos de mensagens no log. Lembre-se de que voc\u00ea precisa ter permiss\u00f5es de superusu\u00e1rio (ou usar sudo) para acessar os logs em alguns diret\u00f3rios, como /var/log/auth.log e /var/log/apache2/.","title":"Para visualizar o log de erros do Apache:"}]}